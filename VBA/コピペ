Sheets("コピー元シート名").Range("コピー元範囲").Copy Destination:=
Sheets("ペースト先シート名").Range("ペースト先セル")

Sheets("シート名").Range("コピー元範囲").Copy Destination:=Sheets("シート名").Range("ペースト先セル")

Sheets("シート名").Range("ペースト先範囲").Value = コピー元配列



Dim copyRange As Range
Dim copyData As Variant

' コピー元の範囲を指定
Set copyRange = Sheets("コピー元シート名").Range("コピー元範囲")

' コピー元のデータを配列に格納
copyData = copyRange.Value


Sheets("張り付け先シート名").Range("張り付け先セル").Value = copyData
Sheets("張り付け先シート名").Range("張り付け先範囲").Value = copyData


注意: 張り付け先の範囲とコピー元の配列のサイズが一致している必要があります。
範囲が異なる場合は、データの一部が張り付け先にしか貼り付けられないか、エラーが発生する可能性があります。



配列の利点:

メモリ内での操作: 配列はメモリ内での操作であり、ワークシート上のセルへのアクセスを最小限に抑えるため、高速な処理が期待できます。
ループ処理の最適化: 配列を使用すると、ループや条件分岐などの処理が高速になります。一度に複数のデータを処理できるため、効率的な計算が可能です。
複数のデータ型のサポート: 配列には異なるデータ型の要素を格納できます。複数の列に対して異なるデータ型を設定することができます。
PasteSpecialの利点:

フォーマットの保持: PasteSpecialは、コピー元のデータのフォーマット（数式、書式、数値の種類など）を保持できます。配列を使用する場合、数値のみをコピーし、数式や書式は別途設定する必要があります。
非連続範囲の処理: PasteSpecialを使用すると、非連続な範囲に対してもデータを貼り付けることができます。配列では連続した範囲に対してのみ貼り付けが可能です。