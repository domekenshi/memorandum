GitHub Flowモデル
masterブランチ
リリース可能な完全品質を保証するブランチ。
git-flowでいうmasterブランチ+developブランチ相当。
masterブランチ上で直接作業したりコミットするのはNG。
リリース作業はmasterブランチ上で行う。（releaseブランチは別途用意しない。）

topicブランチ
機能追加やバグ修正を行うブランチ。
実際のファイル編集作業はこのブランチ上で行う。
masterブランチから枝分かれする唯一のブランチ。
git-flowでいうfeatureブランチ+hotfixブランチ相当。
masterブランチにマージされたらtopicブランチは削除する。
------------------------------------------------------------------------
maseter
リリース可能な完全品質を保証するブランチ。
releaseブランチからのマージのみで更新される。
masterブランチ上で直接作業したりコミットするのはNG。
tagはmasterブランチ上でのみ存在する。


dbvelop
開発の主軸になるブランチ。
masterブランチから派生させる。
developブランチ上で直接作業したりコミットするのはNG。
developブランチからfeatureブランチやreleaseブランチを切る。


release
リリース作業を行うためのブランチ。
developブランチから派生させる。
リリース作業が完了したらmasterブランチとdevelopブランチにマージする。
masterブランチにマージする際のコミットではtagを打つ。
マージされたら該当のreleaseブランチは削除する。

feature
機能追加および修正作業を行うためのブランチ。
developブランチから派生させる。
作業完了してレビューが通ったら、developブランチにマージする。
どのような機能追加を行うブランチなのかが一目で分かるようなブランチ名を心がける。
マージされたら該当のfeatureブランチは削除する。

hotfix
リリース済みのものの緊急修正用の作業を行うブランチ。
masterブランチから派生させる。
修正作業完了後はmasterブランチとdevelopブランチにマージする。
また、masterブランチにマージする際のコミットではリリースタグを打つ。
マージされたら該当のhotfixブランチは削除する。


support
旧バージョンをサポートするためのブランチ。
必須ではないが、旧バージョンをサポートする必要がある場合は、masterブランチのtagからsupportブランチを派生させる。
旧バージョンでバグが発生した場合は、supportブランチ上で直接バグフィックス作業を行いコミットする。
また、バグが過去の複数バージョンにまたがる場合は、修正コミットは対象の全てのバージョンのsupportブランチにcherry-pickする。
サポートが完了したら該当のsupportブランチは削除する。




-------------------------------------------------------------------------------

A successful Git branching model

https://qiita.com/homhom44/items/9f13c646fa2619ae63d0

